profiles:
  cfg:
    isa: RV64IMFDCBZicsr
    metrics:
      # branch_ops:
      #   group_by_branch_offset:
      #     - Grouping Branchs by Offset Size.
      #   group_by_branch_sign:
      #     - Grouping Branchs by Direction.
      #   loop_compute:
      #     - Nested loop computation.
      # register_compute:
      #   register_compute:
      #     - Register computation.
      #   fregister_compute:
      #     - Floating point register computation.
      # jumps_ops:
      #   jumps_compute:
      #     - Grouping jumps by jump direction.
      #   jump_size:
      #     - Grouping jumps by jump size.
      cache:
        data_cache_simulator:
          - Data cache utilization.
        instruction_cache_simulator:
          - Instruction cache utilization.
      # dependency:
      #   raw_compute:
      #     - RAW dependency Computation.
      csr_compute:
        csr_compute:
          - CSR computation.
      # store_load_bypass:
      #   store_load_bypass:
      #     - Store load bypass Computation.
      pattern:
        group_by_pattern:
          - Pattern computation.
    commitlog_regex : '^core\s+\d+:\s+(\d*)\s+(0x[0-9a-fA-F]+)\s+\((0x[0-9a-fA-F]+)\)\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?'
    privilege_mode_regex : '^core\s+\d+:\s+(\d+)'
    uarch:
      bypass_depth: 2
    data_cache:
      range:
        start: 0x80000000
        end: 0x8fffffff
      no_of_sets : 64
      no_of_ways : 4
      line_size : 32
      structural_latency: 7 #number of words - 1
    instr_cache:
      range:
        start: 0x80000000
        end: 0x8fffffff
      no_of_sets : 64
      no_of_ways : 4
      line_size : 32
      structural_latency: 7 #number of words - 1