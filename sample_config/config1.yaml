
# '''Create one cache level out of given configuration.

# :param sets: total number of sets, if 1 cache will be full-associative
# :param ways: total number of ways, if 1 cache will be direct mapped
# :param cl_size: number of bytes that can be addressed individually
# :param replacement_policy: FIFO, LRU (default), MRU or RR
# :param write_back: if true (default), write back will be done on evict.
#                     Otherwise write-through is used.If false, write through
# :param write_allocate: if true (default), a load will be issued on a
#                         write miss. If false, write no allocate
# :param write_combining: if true, this cache will combine writes and
#                         issue them on evicts(default is false)
# :param subblock_size: the minimum blocksize that write-combining can
#                         handle
# :param load_from: the cache level to forward a load in case of a load
#                     miss or write-allocate, if None, assumed to be main
#                     memory
# :param store_to: the cache level to forward a store to in case of
#                     eviction of dirty lines, if None, assumed to be main
#                     memory
# :param victims_to: the cache level to forward any evicted lines to
#                     (dirty or not)

# The total cache size is the product of sets*ways*cl_size.
# Internally all addresses are converted to cacheline indices.

# Instantization has to happen from last level cache to first level
# cache, since each subsequent level requires a reference of the other
# level.
# '''

# YAML with l2 cache congifuration

profiles:
  cfg:
    isa: RV64IMFDCZicsr
    metrics:    # Metrics such as grouping instructs by operation and privledge mode are hard coded in the profiler.py file as the input to these functions is the commit log. However, the metrics such as grouping instructs by CSRs and cache computation is mandatory for a cycle accurate profiling.
      branch_ops:
        group_by_branch_offset:
          - Grouping Branchs by Offset Size.
        group_by_branch_sign:
          - Grouping Branchs by Direction.
        loop_compute:
          - Nested loop computation.
      register_compute:
        register_compute:
          - Register computation.
        fregister_compute:
          - Floating point register computation.
      jumps_ops:
        jumps_compute:
          - Grouping jumps by jump direction.
        jump_size:
          - Grouping jumps by jump size.
      dependency:
        raw_compute:
          - RAW dependency Computation.
      csr_compute: # mandatory
        csr_compute:
          - CSR computation.
      cache:
        data_cache_simulator:
          - Data cache utilization.
        instruction_cache_simulator:
          - Instruction cache utilization.
      # cache:
      #   unified_L2_cache_simulator:
      #     - Cache utilization.
      store_load_bypass:
        store_load_bypass:
          - Store load bypass Computation.
      pattern:
        group_by_pattern:
          - Pattern computation.
    commitlog_regex : '^core\s+\d+:\s+(\d*)\s+(0x[0-9a-fA-F]+)\s+\((0x[0-9a-fA-F]+)\)\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?\s*(x[0-9]*)?(c[0-9]+[_a-z]*)?(mem)?\s*(0x[0-9a-fA-F]*)?'
    privilege_mode_regex : '^core\s+\d+:\s+(\d+)'
    uarch:
      bypass_depth: 2
    data_cache:
      range:
        start: 0x80000000
        end: 0x8fffffff
      no_of_sets : 64
      no_of_ways : 8
      line_size : 32
      replacement_policy: "FIFO" #round robin
      write_back : True # false for write through
      write_allocate : True # false for write no allocate
      structural_latency: 7 #number of words - 1
    instr_cache:
      range:
        start: 0x80000000
        end: 0x8fffffff
      no_of_sets : 32
      no_of_ways : 2
      line_size : 32
      replacement_policy: "LFSR"
      write_back : True # false for write through
      write_allocate : True # false for write no allocate
      structural_latency: 7 #number of words - 1
    l2_cache:
      range:
        start: 0x80000000
        end: 0x8fffffff
      no_of_sets : 32
      no_of_ways : 2
      line_size : 32
      replacement_policy: "LFSR"
      write_back : True # false for write through
      write_allocate : True # false for write no allocate
      structural_latency: 7 #number of words - 1

  # interface:
    # L1: cache_line
    # L2: 32 bits